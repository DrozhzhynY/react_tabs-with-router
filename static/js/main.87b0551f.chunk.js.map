{"version":3,"sources":["components/Tab.tsx","components/Tabs/Tabs.tsx","components/TabsPage.tsx","App.tsx","index.tsx"],"names":["Tab","tabs","activeTabId","tabId","useParams","currentContent","find","tab","id","useEffect","content","Tabs","match","useRouteMatch","useState","currentTabId","setCurrentTabId","className","map","type","key","classNames","to","url","title","path","TabsPage","App","activeClassName","exact","component","ReactDOM","render","document","getElementById"],"mappings":"gTAyBeA,G,MAjBc,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YAC5BC,EAAUC,cAAVD,MACFE,EAAiBJ,EAAKK,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,KAMnD,OAJAM,qBAAU,WACRP,EAAYC,MAIZ,6BACE,mCACGE,QADH,IACGA,OADH,EACGA,EAAgBK,YCuCVC,EAxCe,SAAC,GAAc,IAAZV,EAAW,EAAXA,KACzBW,EAAQC,cAD4B,EAEFC,mBAASb,EAAK,GAAGO,IAFf,mBAEnCO,EAFmC,KAErBC,EAFqB,KAQ1C,OACE,oCACE,yBAAKC,UAAU,QACb,wBAAIA,UAAU,SAAd,QAGChB,EAAKiB,KAAI,SAAAX,GAAG,OACX,4BACEY,KAAK,SACLC,IAAKb,EAAIC,GACTS,UAAWI,IAAW,MAAO,CAAE,YAAaN,IAAiBR,EAAIC,MAEjE,kBAAC,IAAD,CAASS,UAAU,YAAYG,IAAKb,EAAIC,GAAIc,GAAE,UAAKV,EAAMW,IAAX,YAAkBhB,EAAIC,KACjED,EAAIiB,YAKb,6BACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAI,UAAKb,EAAMa,KAAX,YACT,kBAAC,EAAD,CACExB,KAAMA,EACNC,YA3BQ,SAACM,GACnBQ,EAAgBR,WCPLkB,EARmB,SAAC,GAAc,IAAZzB,EAAW,EAAXA,KACnC,OACE,6BACE,kBAAC,EAAD,CAAMA,KAAMA,MCLZA,EAAO,CACX,CAAEO,GAAI,QAASgB,MAAO,QAASd,QAAS,eACxC,CAAEF,GAAI,QAASgB,MAAO,QAASd,QAAS,eACxC,CAAEF,GAAI,QAASgB,MAAO,QAASd,QAAS,gBA0C3BiB,EAvCH,kBACV,oCACE,yBAAKV,UAAU,mBACb,wBAAIA,UAAU,aACZ,wBAAIA,UAAU,aACZ,kBAAC,IAAD,CACEA,UAAU,YACVW,gBAAgB,YAChBN,GAAG,IACHO,OAAK,GAJP,SASF,wBAAIZ,UAAU,aACZ,kBAAC,IAAD,CACEA,UAAU,YACVW,gBAAgB,YAChBN,GAAG,QACHO,OAAK,GAJP,WAYN,yBAAKZ,UAAU,QACb,wBAAIA,UAAU,cAAd,oBACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOQ,KAAK,SACV,kBAAC,EAAD,CAAUxB,KAAMA,KAElB,kBAAC,IAAD,CAAOwB,KAAK,IAAIK,UAAW,kBAAM,wBAAIb,UAAU,SAAd,mBCxCzCc,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.87b0551f.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\ntype Props = {\n  tabs: Tab[];\n  activeTabId: (id: string) => void;\n};\n\nconst Tab: React.FC<Props> = ({ tabs, activeTabId }) => {\n  const { tabId } = useParams();\n  const currentContent = tabs.find(tab => tab.id === tabId);\n\n  useEffect(() => {\n    activeTabId(tabId);\n  });\n\n  return (\n    <div>\n      <h3>\n        {currentContent?.content}\n      </h3>\n    </div>\n  );\n};\n\nexport default Tab;\n","import React, { useState } from 'react';\n\nimport {\n  useRouteMatch,\n  NavLink,\n  Switch,\n  Route,\n} from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport './Tabs.css';\n\nimport Tab from '../Tab';\n\ntype Props = {\n  tabs: Tab[];\n};\n\nconst Tabs: React.FC<Props> = ({ tabs }) => {\n  const match = useRouteMatch();\n  const [currentTabId, setCurrentTabId] = useState(tabs[0].id);\n\n  const activeTabId = (id: string) => {\n    setCurrentTabId(id);\n  };\n\n  return (\n    <>\n      <div className=\"wrap\">\n        <h1 className=\"title\">\n          Tabs\n        </h1>\n        {tabs.map(tab => (\n          <button\n            type=\"button\"\n            key={tab.id}\n            className={classNames('tab', { 'is-active': currentTabId === tab.id })}\n          >\n            <NavLink className=\"tab__link\" key={tab.id} to={`${match.url}/${tab.id}`}>\n              {tab.title}\n            </NavLink>\n          </button>\n        ))}\n      </div>\n      <div>\n        <Switch>\n          <Route path={`${match.path}/:tabId`}>\n            <Tab\n              tabs={tabs}\n              activeTabId={activeTabId}\n            />\n          </Route>\n        </Switch>\n      </div>\n    </>\n  );\n};\n\nexport default Tabs;\n","import React from 'react';\n\nimport Tabs from './Tabs/Tabs';\n\ntype Props = {\n  tabs: Tab[];\n};\n\nconst TabsPage: React.FC<Props> = ({ tabs }) => {\n  return (\n    <div>\n      <Tabs tabs={tabs} />\n    </div>\n  );\n};\n\nexport default TabsPage;\n","import React from 'react';\nimport { Switch, Route, NavLink } from 'react-router-dom';\n\nimport './App.css';\nimport TabsPage from './components/TabsPage';\n\nconst tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nconst App = () => (\n  <>\n    <nav className=\"nav header__nav\">\n      <ul className=\"nav__list\">\n        <li className=\"nav__item\">\n          <NavLink\n            className=\"nav__link\"\n            activeClassName=\"is-active\"\n            to=\"/\"\n            exact\n          >\n            Home\n          </NavLink>\n        </li>\n        <li className=\"nav__item\">\n          <NavLink\n            className=\"nav__link\"\n            activeClassName=\"is-active\"\n            to=\"/tabs\"\n            exact\n          >\n            Tabs\n          </NavLink>\n        </li>\n      </ul>\n    </nav>\n\n    <div className=\"wrap\">\n      <h1 className=\"app__title\">Tabs with router</h1>\n      <Switch>\n        <Route path=\"/tabs\">\n          <TabsPage tabs={tabs} />\n        </Route>\n        <Route path=\"/\" component={() => <h1 className=\"title\">HomePage</h1>} />\n      </Switch>\n    </div>\n  </>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}